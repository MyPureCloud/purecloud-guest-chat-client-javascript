{
  "deletewebchatguestconversationmember": {
    "operationId": "deletewebchatguestconversationmember",
    "functionName": "deleteWebchatGuestConversationMember",
    "signature": "deleteWebchatGuestConversationMember(conversationId, memberId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "String",
        "required": "true"
      }
    ],
    "example": "// Browser\nconst platformClient = require('platformClient');\n// Node\nconst platformClient = require('purecloud-guest-chat-client');\n\n// Set JWT from the create chat response\nplatformClient.ApiClient.instance.setJwt(chatInfo.jwt);\n\nlet apiInstance = new platformClient.DeleteWebchatGuestConversationMemberRequest();\n\nlet conversationId = \"conversationId_example\"; // String | conversationId\nlet memberId = \"memberId_example\"; // String | memberId\n\napiInstance.deleteWebchatGuestConversationMember(conversationId, memberId)\n  .then(() => {\n    console.log('deleteWebchatGuestConversationMember returned successfully.');\n  })\n  .catch((err) => {\n    console.log('There was a failure calling deleteWebchatGuestConversationMember');\n    console.error(err);\n  });\n\n"
  },
  "getwebchatguestconversationmediarequest": {
    "operationId": "getwebchatguestconversationmediarequest",
    "functionName": "getWebchatGuestConversationMediarequest",
    "signature": "getWebchatGuestConversationMediarequest(conversationId, mediaRequestId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "mediaRequestId",
        "type": "String",
        "required": "true"
      }
    ],
    "return": "WebChatGuestMediaRequest",
    "example": "// Browser\nconst platformClient = require('platformClient');\n// Node\nconst platformClient = require('purecloud-guest-chat-client');\n\n// Set JWT from the create chat response\nplatformClient.ApiClient.instance.setJwt(chatInfo.jwt);\n\nlet apiInstance = new platformClient.GetWebchatGuestConversationMediarequestRequest();\n\nlet conversationId = \"conversationId_example\"; // String | conversationId\nlet mediaRequestId = \"mediaRequestId_example\"; // String | mediaRequestId\n\napiInstance.getWebchatGuestConversationMediarequest(conversationId, mediaRequestId)\n  .then((data) => {\n    console.log(`getWebchatGuestConversationMediarequest success! data: ${JSON.stringify(data, null, 2)}`);\n  })\n  .catch((err) => {\n    console.log('There was a failure calling getWebchatGuestConversationMediarequest');\n    console.error(err);\n  });\n\n"
  },
  "getwebchatguestconversationmediarequests": {
    "operationId": "getwebchatguestconversationmediarequests",
    "functionName": "getWebchatGuestConversationMediarequests",
    "signature": "getWebchatGuestConversationMediarequests(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "String",
        "required": "true"
      }
    ],
    "return": "WebChatGuestMediaRequestEntityList",
    "example": "// Browser\nconst platformClient = require('platformClient');\n// Node\nconst platformClient = require('purecloud-guest-chat-client');\n\n// Set JWT from the create chat response\nplatformClient.ApiClient.instance.setJwt(chatInfo.jwt);\n\nlet apiInstance = new platformClient.GetWebchatGuestConversationMediarequestsRequest();\n\nlet conversationId = \"conversationId_example\"; // String | conversationId\n\napiInstance.getWebchatGuestConversationMediarequests(conversationId)\n  .then((data) => {\n    console.log(`getWebchatGuestConversationMediarequests success! data: ${JSON.stringify(data, null, 2)}`);\n  })\n  .catch((err) => {\n    console.log('There was a failure calling getWebchatGuestConversationMediarequests');\n    console.error(err);\n  });\n\n"
  },
  "getwebchatguestconversationmember": {
    "operationId": "getwebchatguestconversationmember",
    "functionName": "getWebchatGuestConversationMember",
    "signature": "getWebchatGuestConversationMember(conversationId, memberId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "String",
        "required": "true"
      }
    ],
    "return": "WebChatMemberInfo",
    "example": "// Browser\nconst platformClient = require('platformClient');\n// Node\nconst platformClient = require('purecloud-guest-chat-client');\n\n// Set JWT from the create chat response\nplatformClient.ApiClient.instance.setJwt(chatInfo.jwt);\n\nlet apiInstance = new platformClient.GetWebchatGuestConversationMemberRequest();\n\nlet conversationId = \"conversationId_example\"; // String | conversationId\nlet memberId = \"memberId_example\"; // String | memberId\n\napiInstance.getWebchatGuestConversationMember(conversationId, memberId)\n  .then((data) => {\n    console.log(`getWebchatGuestConversationMember success! data: ${JSON.stringify(data, null, 2)}`);\n  })\n  .catch((err) => {\n    console.log('There was a failure calling getWebchatGuestConversationMember');\n    console.error(err);\n  });\n\n"
  },
  "getwebchatguestconversationmembers": {
    "operationId": "getwebchatguestconversationmembers",
    "functionName": "getWebchatGuestConversationMembers",
    "signature": "getWebchatGuestConversationMembers(conversationId, pageSize, pageNumber, excludeDisconnectedMembers)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "Number",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "Number",
        "required": "false"
      },
      {
        "name": "excludeDisconnectedMembers",
        "type": "Boolean",
        "required": "false"
      }
    ],
    "return": "WebChatMemberInfoEntityList",
    "example": "// Browser\nconst platformClient = require('platformClient');\n// Node\nconst platformClient = require('purecloud-guest-chat-client');\n\n// Set JWT from the create chat response\nplatformClient.ApiClient.instance.setJwt(chatInfo.jwt);\n\nlet apiInstance = new platformClient.GetWebchatGuestConversationMembersRequest();\n\nlet conversationId = \"conversationId_example\"; // String | conversationId\nlet opts = { \n  'pageSize': 25, // Number | The number of entries to return per page, or omitted for the default.\n  'pageNumber': 1, // Number | The page number to return, or omitted for the first page.\n  'excludeDisconnectedMembers': false // Boolean | If true, the results will not contain members who have a DISCONNECTED state.\n};\n\napiInstance.getWebchatGuestConversationMembers(conversationId, opts)\n  .then((data) => {\n    console.log(`getWebchatGuestConversationMembers success! data: ${JSON.stringify(data, null, 2)}`);\n  })\n  .catch((err) => {\n    console.log('There was a failure calling getWebchatGuestConversationMembers');\n    console.error(err);\n  });\n\n"
  },
  "getwebchatguestconversationmessage": {
    "operationId": "getwebchatguestconversationmessage",
    "functionName": "getWebchatGuestConversationMessage",
    "signature": "getWebchatGuestConversationMessage(conversationId, messageId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "String",
        "required": "true"
      }
    ],
    "return": "WebChatMessage",
    "example": "// Browser\nconst platformClient = require('platformClient');\n// Node\nconst platformClient = require('purecloud-guest-chat-client');\n\n// Set JWT from the create chat response\nplatformClient.ApiClient.instance.setJwt(chatInfo.jwt);\n\nlet apiInstance = new platformClient.GetWebchatGuestConversationMessageRequest();\n\nlet conversationId = \"conversationId_example\"; // String | conversationId\nlet messageId = \"messageId_example\"; // String | messageId\n\napiInstance.getWebchatGuestConversationMessage(conversationId, messageId)\n  .then((data) => {\n    console.log(`getWebchatGuestConversationMessage success! data: ${JSON.stringify(data, null, 2)}`);\n  })\n  .catch((err) => {\n    console.log('There was a failure calling getWebchatGuestConversationMessage');\n    console.error(err);\n  });\n\n"
  },
  "getwebchatguestconversationmessages": {
    "operationId": "getwebchatguestconversationmessages",
    "functionName": "getWebchatGuestConversationMessages",
    "signature": "getWebchatGuestConversationMessages(conversationId, after, before, sortOrder, maxResults)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "after",
        "type": "String",
        "required": "false"
      },
      {
        "name": "before",
        "type": "String",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "String",
        "required": "false"
      },
      {
        "name": "maxResults",
        "type": "Number",
        "required": "false"
      }
    ],
    "return": "WebChatMessageEntityList",
    "example": "// Browser\nconst platformClient = require('platformClient');\n// Node\nconst platformClient = require('purecloud-guest-chat-client');\n\n// Set JWT from the create chat response\nplatformClient.ApiClient.instance.setJwt(chatInfo.jwt);\n\nlet apiInstance = new platformClient.GetWebchatGuestConversationMessagesRequest();\n\nlet conversationId = \"conversationId_example\"; // String | conversationId\nlet opts = { \n  'after': \"after_example\", // String | If available, get the messages chronologically after the id of this message\n  'before': \"before_example\", // String | If available, get the messages chronologically before the id of this message\n  'sortOrder': \"ascending\", // String | Sort order\n  'maxResults': 100 // Number | Limit the returned number of messages, up to a maximum of 100\n};\n\napiInstance.getWebchatGuestConversationMessages(conversationId, opts)\n  .then((data) => {\n    console.log(`getWebchatGuestConversationMessages success! data: ${JSON.stringify(data, null, 2)}`);\n  })\n  .catch((err) => {\n    console.log('There was a failure calling getWebchatGuestConversationMessages');\n    console.error(err);\n  });\n\n"
  },
  "patchwebchatguestconversationmediarequest": {
    "operationId": "patchwebchatguestconversationmediarequest",
    "functionName": "patchWebchatGuestConversationMediarequest",
    "signature": "patchWebchatGuestConversationMediarequest(conversationId, mediaRequestId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "mediaRequestId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Object",
        "required": "true"
      }
    ],
    "return": "WebChatGuestMediaRequest",
    "example": "// Browser\nconst platformClient = require('platformClient');\n// Node\nconst platformClient = require('purecloud-guest-chat-client');\n\n// Set JWT from the create chat response\nplatformClient.ApiClient.instance.setJwt(chatInfo.jwt);\n\nlet apiInstance = new platformClient.PatchWebchatGuestConversationMediarequestRequest();\n\nlet conversationId = \"conversationId_example\"; // String | conversationId\nlet mediaRequestId = \"mediaRequestId_example\"; // String | mediaRequestId\nlet body = {}; // Object | Request\n\napiInstance.patchWebchatGuestConversationMediarequest(conversationId, mediaRequestId, body)\n  .then((data) => {\n    console.log(`patchWebchatGuestConversationMediarequest success! data: ${JSON.stringify(data, null, 2)}`);\n  })\n  .catch((err) => {\n    console.log('There was a failure calling patchWebchatGuestConversationMediarequest');\n    console.error(err);\n  });\n\n"
  },
  "postwebchatguestconversationmembermessages": {
    "operationId": "postwebchatguestconversationmembermessages",
    "functionName": "postWebchatGuestConversationMemberMessages",
    "signature": "postWebchatGuestConversationMemberMessages(conversationId, memberId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Object",
        "required": "true"
      }
    ],
    "return": "WebChatMessage",
    "example": "// Browser\nconst platformClient = require('platformClient');\n// Node\nconst platformClient = require('purecloud-guest-chat-client');\n\n// Set JWT from the create chat response\nplatformClient.ApiClient.instance.setJwt(chatInfo.jwt);\n\nlet apiInstance = new platformClient.PostWebchatGuestConversationMemberMessagesRequest();\n\nlet conversationId = \"conversationId_example\"; // String | conversationId\nlet memberId = \"memberId_example\"; // String | memberId\nlet body = {}; // Object | Message\n\napiInstance.postWebchatGuestConversationMemberMessages(conversationId, memberId, body)\n  .then((data) => {\n    console.log(`postWebchatGuestConversationMemberMessages success! data: ${JSON.stringify(data, null, 2)}`);\n  })\n  .catch((err) => {\n    console.log('There was a failure calling postWebchatGuestConversationMemberMessages');\n    console.error(err);\n  });\n\n"
  },
  "postwebchatguestconversationmembertyping": {
    "operationId": "postwebchatguestconversationmembertyping",
    "functionName": "postWebchatGuestConversationMemberTyping",
    "signature": "postWebchatGuestConversationMemberTyping(conversationId, memberId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "String",
        "required": "true"
      }
    ],
    "return": "WebChatTyping",
    "example": "// Browser\nconst platformClient = require('platformClient');\n// Node\nconst platformClient = require('purecloud-guest-chat-client');\n\n// Set JWT from the create chat response\nplatformClient.ApiClient.instance.setJwt(chatInfo.jwt);\n\nlet apiInstance = new platformClient.PostWebchatGuestConversationMemberTypingRequest();\n\nlet conversationId = \"conversationId_example\"; // String | conversationId\nlet memberId = \"memberId_example\"; // String | memberId\n\napiInstance.postWebchatGuestConversationMemberTyping(conversationId, memberId)\n  .then((data) => {\n    console.log(`postWebchatGuestConversationMemberTyping success! data: ${JSON.stringify(data, null, 2)}`);\n  })\n  .catch((err) => {\n    console.log('There was a failure calling postWebchatGuestConversationMemberTyping');\n    console.error(err);\n  });\n\n"
  },
  "postwebchatguestconversations": {
    "operationId": "postwebchatguestconversations",
    "functionName": "postWebchatGuestConversations",
    "signature": "postWebchatGuestConversations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Object",
        "required": "true"
      }
    ],
    "return": "CreateWebChatConversationResponse",
    "example": "// Browser\nconst platformClient = require('platformClient');\n// Node\nconst platformClient = require('purecloud-guest-chat-client');\n\nlet apiInstance = new platformClient.PostWebchatGuestConversationsRequest();\n\nlet body = {}; // Object | CreateConversationRequest\n\napiInstance.postWebchatGuestConversations(body)\n  .then((data) => {\n    console.log(`postWebchatGuestConversations success! data: ${JSON.stringify(data, null, 2)}`);\n  })\n  .catch((err) => {\n    console.log('There was a failure calling postWebchatGuestConversations');\n    console.error(err);\n  });\n\n"
  }
}